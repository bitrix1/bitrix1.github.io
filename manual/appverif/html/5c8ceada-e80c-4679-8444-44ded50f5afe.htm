<html DIR="LTR" xmlns:MSHelp="http://msdn.microsoft.com/mshelp"  xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:tool="http://www.microsoft.com/tooltip"><head>
  <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=Windows-1252"></META><META NAME="save" CONTENT="history"></META><
    title>Using the Command Line</title><link rel="stylesheet" type="text/css" href="../local/Classic.css"></link>
    <script src="../local/script.js"></script>
  </head><body><div><input type="hidden" id="userDataCache" class="userDataStyle"></input><input type="hidden" id="hiddenScrollOffset"></input></div><img id="dropDownImage" style="display:none; height:0; width:0;" src="../local/drpdown.gif"></img><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../local/drpdown_orange.gif"></img><img id="collapseImage" style="display:none; height:0; width:0;" src="../local/collapse.gif"></img><img id="expandImage" style="display:none; height:0; width:0;" src="../local/exp.gif"></img><img id="copyImage" style="display:none; height:0; width:0;" src="../local/copycode.gif"></img><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../local/copycodeHighlight.gif"></img><div id="header"><table width="100%" id="topTable"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText"></span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Using the Command Line</span></td></tr><tr id="headerTableRow3"><td></td></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><p>Application Verifier can be used via the UI or by using command line options. Following are examples of how to use the command line (below are the details): </p><p>To quickly enable Application Verifier for Handles, Heap, Lock, Exceptions, TLS, and Memory: </p><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>appverif /verify TARGET [/faults [PROBABILITY [TIMEOUT [DLL �]]]]
appverif /verify notepad
appverif -enable LAYER � -for TARGET ... [-with [LAYER].PROPERTY=[VALUE] �] 
appverif -disable LAYER ... -for TARGET ...
appverif -query LAYER ... -for TARGET ...
appverif �configure STOP ... -for TARGET ... [-with STOPPROPERTY=[VALUE] �]
appverif �logtofile {enable|disable}</pre></td></tr></table></span></div><p>To enable Application Verifier for a specific verification layer for two applications: </p><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>appverif �enable Heaps Locks �for notepad.exe iexplore.exe </pre></td></tr></table></span></div><p>To enable two layers named X and Y for target test.exe with properties X.DebugLevel and Y.DebugLevel: </p><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>appverif �enable X Y �for test.exe �with X.DebugLevel=1 Y.DebugLevel=2 </pre></td></tr></table></span></div><p>To disable all checks run on an application: </p><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>appverif -disable * -for notepad.exe</pre></td></tr></table></span></div><p>OR </p><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>appverif -delete settings -for notepad.exe </pre></td></tr></table></span></div><p>To globally enable or disable Application Verifier logging for all processes:</p><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>appverif �logtofile enable
appverif �logtofile disable</pre></td></tr></table></span></div><p>Logging is enabled by default for all processes.</p><p>Following are the details on running Application Verifier using the command line.</p><h2 class="heading">Command Line Syntax</h2><div id="sectionSection0" class="section"><content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"><p xmlns="">The command line syntax accepts one or more layers and applies them to one or more targets with optional property specifiers for layers. </p><div class="code" xmlns=""><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>appverif -enable LAYER ... -for TARGET ... [-with [LAYER].PROPERTY=[VALUE] �] 
appverif -disable LAYER ... -for TARGET ...
appverif -query LAYER ... -for TARGET ...
appverif �configure STOP ... -for TARGET ... [-with STOPPROPERTY=[VALUE] �]</pre></td></tr></table></span></div><p xmlns="">where: </p><ul xmlns=""><li class="unordered"><b>LAYER</b>
   is a standard name for a verification layer. If a new verifier provider is installed then this will expose a new verification layer name to be used in the command line. Current layers are: <br /><br /><ul><li class="unordered">
									Heap<br /><br /></li><li class="unordered">
									Locks <br /><br /></li><li class="unordered">
									Handles <br /><br /></li><li class="unordered">
									Etc. <br /><br /></li></ul>
							You can set 
    <b>LAYER</b>
   to * to specify that the command applies to all layers.<br /><br /></li><li class="unordered"><b>TARGET</b>
   is a binary name (e.g. notepad.exe). This is a static setting that is persisted in the registry and will be taken into consideration whenever the application is started. For the 
    <b>appverif �disable</b>
   command, you can set 
    <b>TARGET</b>
   to * to specify that all targets should be disabled.<br /><br /></li><li class="unordered"><b>PROPERTY</b>
   is property name specific to the LAYER mentioned in the command line. For example, the Handles layer has traces as property.<br /><br /></li><li class="unordered"><b>VALUE</b>
   is a value for the property. The type of the value depends on the type associated with the property and it will be enforced. The supported types for now are: boolean (true/false), integer (decimal/octal/hex in C notation), string and multi-string (containing `\0� between strings and being terminated by `\0\0�). If VALUE is not specified it means the user wants to delete that property and revert behavior to the default value for the property. <br /><br /></li><li class="unordered"><b>STOP</b>
   is the number (decimal or hex in C notation) of the verifier stop issue to be configured. The stop codes must be unique (no two layers can use the same stop code therefore the tool itself will determine to what layer the stop belongs to) <br /><br /></li><li class="unordered"><b>STOPPROPERTY</b>
   is a property name that is acceptable for verifier stops. If the value is not specified it is assumed the property must be deleted. Right now the allowed properties for stops are (See Configuring Verifier Stops below for more details): <br /><br /><ul><li class="unordered">
									ErrorReport <br /><br /></li><li class="unordered">
									Severity <br /><br /></li><li class="unordered">
									Flavor <br /><br /></li></ul></li></ul><p xmlns="">The properties can be optionally qualified by the layer they belong to. However, this is not needed if command line enables just one layer. For example, to enable two layers named X and Y for target test.exe with properties X.DebugLevel and Y.DebugLevel the command is: </p><div class="code" xmlns=""><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>appverif �enable X Y �for test.exe �with X.DebugLevel=1 Y.DebugLevel=2 </pre></td></tr></table></span></div><p xmlns="">However if layer X is enabled, then an unqualified property name can be used: </p><div class="code" xmlns=""><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>appverif �enable X �for test.exe �with DebugLevel=1 </pre></td></tr></table></span></div><p xmlns="">The separator character between property name and value can be `=� (equal sign) or `:� (colon). </p></content></div><h2 class="heading">Miscellaneous commands</h2><div id="sectionSection1" class="section"><content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"><div class="code" xmlns=""><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>appverif �query providers 
appverif �delete logs �for TARGET ...
appverif �delete settings �for TARGET ... </pre></td></tr></table></span></div><p xmlns="">Wipe out completely TARGET from registry. </p><div class="code" xmlns=""><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>appverif �stamp log �for Target �with Stamp=�LOG_STAMP�[Log= RELATIVE_TO_LAST_INDEX] </pre></td></tr></table></span></div><p xmlns="">This command will stamp the log with LOG_STAMP. This stamp is useful to identify only a section of a log as relevant when viewing the log in XML form. </p><div class="code" xmlns=""><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>appverif �export log �for TARGET �with To=XML_FILE[Symbols=SYMBOL_PATH][Stamp=LOG_STAMP][StampTo=LOG_STAMP][Log=RELATIVE_TO_LAST_INDEX] </pre></td></tr></table></span></div><p xmlns="">The command above will export a binary log to an xml file. The optional Stamp property is used to identify which part of the log should be exported to XML. If not specified then the entire log will be converted. The Log property has a negative integer as possible value and signifies what log file should be converted starting from last one (assumed if property is not present). For example, launch notepad.exe three times in a row. To access the first log created, specify Log=-2 in the command line.</p></content></div><h2 class="heading">Shortcuts for Command Line</h2><div id="sectionSection2" class="section"><content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"><p xmlns="">Following are shortcuts:</p><div class="code" xmlns=""><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>appverif /verify TARGET [/faults [PROBABILITY [TIMEOUT [DLL �]]]] </pre></td></tr></table></span></div><p xmlns="">where: </p><ul xmlns=""><li class="unordered"><b>TARGET</b>
   has the same meaning as described above. <br /><br /></li><li class="unordered"><b>PROBABILITY</b>
   is the probability to inject faults. Must be a value in the range 0..1000000. If not specified the default value is 5%. <br /><br /></li><li class="unordered"><b>TIMEOUT</b>
   is the time interval in milliseconds during process startup when fault injection does not happen. This is done to allow the process to properly startup before faults happen. If not specified the value is 500 msecs.<br /><br /></li><li class="unordered"><b>DLL</b>
   is the name of module that gets loaded in the process. Typically this is the name of a dynamic library (extension .dll) but can be an ActiveX (extension .ocx) or some other loadable module. <br /><br /></li></ul><p xmlns="">Examples:</p><div class="code" xmlns=""><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>appverif /verify notepad.exe /faults 100000 1000 msvcrt.dll </pre></td></tr></table></span></div><p xmlns="">Enable fault injection for notepad.exe (whenever it will be launched). Faults should happen with probability 10%, only 1000 msecs after process got launched and only for operations initiated from msvcrt.dll.</p></content></div><h2 class="heading">Enabling Fault Injection details</h2><div id="sectionSection3" class="section"><content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"><p xmlns="">Using the /faults command line will enable fault injection just for OLE_ALLOC and HEAP_ALLOC. However, you can use the command line to configure which type of fault injection you want to turn on. For example, if you want to inject fault into a registry or file API as 2%, use the command line:</p><div class="code" xmlns=""><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>appverif -enable lowres -for hello.exe -with registry=20000 file=20000</pre></td></tr></table></span></div><p xmlns="">Another example:</p><div class="code" xmlns=""><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>appverif -query lowres -for hello.exe</pre></td></tr></table></span></div><p xmlns="">Settings for hello.exe:</p><p xmlns="">Test [lowres] enabled.</p><div class="code" xmlns=""><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>Include = *
Exclude =
TimeOut = 2000 (0x7D0)
WAIT = 0 (0x0)
HEAP_ALLOC = 20000 (0x4E20)
VIRTUAL_ALLOC = 0 (0x0)
REGISTRY = 20000 (0x4E20)
FILE = 20000 (0x4E20)
EVENT = 0 (0x0)
MAP_VIEW = 0 (0x0)
OLE_ALLOC = 20000 (0x4E20)
STACKS = false</pre></td></tr></table></span></div></content></div><h2 class="heading">Configuring Verifier Stops</h2><div id="sectionSection4" class="section"><content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"><p xmlns="">Using the command line (or user interface) you can configure verifier stops. Following are examples to leverage: </p><div class="code" xmlns=""><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>Appverif -configure STOP ... -for TARGET ... -with PROPERTY=VALUE ...</pre></td></tr></table></span></div><p xmlns="">STOP is stop code such as 0x200 0x201</p><p xmlns="">TARGET is application name such as foo.exe</p><p xmlns="">PROPERTY can be one of the �ErrorReport�, �Severity�, and �Flavor�</p><p xmlns="">For the 
    <b>ErrorReport</b>
  , VALUE can be the combination of the following values.</p><p xmlns="">0x00000001 means the stop is active. (If this bit is zero, it means the stop is disabled)</p><p xmlns="">0x00000020 means the stop will break into debugger using a breakpoint.</p><p xmlns="">0x00000040 means the stop break into debugger by generating a Verifier Exception.</p><p xmlns="">0x00000080 means the stop will be logged in the log file.</p><p xmlns="">0x00000100 means the stack trace for this stop will be logged in the log file.</p><p xmlns="">For the 
    <b>Severity</b>
  , VALUE can be one of followings.</p><p xmlns="">0x00000003 Informative stop.</p><p xmlns="">0x0000000F Warning.</p><p xmlns="">0x0000003F Error.</p><p xmlns="">For the 
    <b>Flavor</b>
  , Value can be the combination of the following values.</p><p xmlns="">0x00000002 Non-continuable stop.</p><p xmlns="">0x00000010 This stop will only appear one time. It will be ignored the following time within the test run.</p><p xmlns="">For example, disable stops 0x2700, 0x2701 for foo.exe</p><div class="code" xmlns=""><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>Appverif �configure 0x2700 0x2701 �for foo.exe �with ErrorReport=0</pre></td></tr></table></span></div><p xmlns="">Configure stop code 0x2700 as breaking into debugger (it�s off by default), saving a log without stack trace, and make it non-continuable</p><div class="code" xmlns=""><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th>�</th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onfocusin="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" onfocusout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>Appverif �configure 0x2700 �for foo.exe �with ErrorReport=0xA1 Flavor=0x2</pre></td></tr></table></span></div></content></div><!--[if gte IE 5]>
			<tool:tip element="languageFilterToolTip" avoidmouse="false"/>
		<![endif]--></div><div id="footer"><p></p><hr></hr><br /><br /></div></div></body></html>
<html DIR="LTR" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:tool="http://www.microsoft.com/tooltip"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=Windows-1252"></META><META NAME="save" CONTENT="history"></META><title>Probing null address</title><link rel="stylesheet" type="text/css" href="../local/Classic.css"></link><script src="../local/script.js"></script></head><body><div><input type="hidden" id="userDataCache" class="userDataStyle"></input><input type="hidden" id="hiddenScrollOffset"></input></div><img id="dropDownImage" style="display:none; height:0; width:0;" src="../local/drpdown.gif"></img><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../local/drpdown_orange.gif"></img><img id="collapseImage" style="display:none; height:0; width:0;" src="../local/collapse.gif"></img><img id="expandImage" style="display:none; height:0; width:0;" src="../local/exp.gif"></img><img id="copyImage" style="display:none; height:0; width:0;" src="../local/copycode.gif"></img><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../local/copycodeHighlight.gif"></img><div id="header"><table width="100%" id="topTable"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText"></span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Probing null address</span></td></tr><tr id="headerTableRow3"><td></td></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><p></p><h2 class="heading">Application Verifier break message</h2><div id="sectionSection0" class="section"><content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"><p xmlns=""> Probing null address.</p></content></div><h2 class="heading">Probable cause</h2><div id="sectionSection1" class="section"><content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"><p xmlns=""> This stop is generated if Application Verifier detects an IsBadXXXPtr call with a NULL address.</p></content></div><h2 class="heading">Information displayed by Application Verifier</h2><div id="sectionSection2" class="section"><content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"><p xmlns=""> Parameter1 - Not used</p><p xmlns="">Parameter2 - Not used </p><p xmlns="">Parameter3 - Not used</p><p xmlns="">Parameter4 - Not used </p><p xmlns="">Description - Probing null address</p></content></div><h2 class="heading">Additional information</h2><div id="sectionSection3" class="section"><content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"><p xmlns=""> Verifier stop code 0606.</p><p xmlns="">To debug this stop look at the current stack trace (kb) and try to determine why the caller of the IsBadXXXPtr function ended up with the NULL address. This is typically the sign of someone not checking the return value of one of the memory allocation functions. For example the code below is incorrect: </p><p xmlns="">int main (void)</p><p xmlns="">{</p><p xmlns="">            PVOID p; </p><p xmlns="">p = malloc (1024);</p><p xmlns="">Use (p); </p><p xmlns="">return 0;</p><p xmlns="">} </p><p xmlns="">void Use (PVOID p)</p><p xmlns="">{<br />if (IsBadReadPtr (p)) {</p><p xmlns="">                        return;</p><p xmlns="">} </p><p xmlns="">//</p><p xmlns="">// p is safe to be used here.</p><p xmlns="">// </p><p xmlns="">} </p><p xmlns="">This code should be re-written as this: </p><p xmlns="">int main (void)</p><p xmlns="">{</p><p xmlns="">            PVOID p; </p><p xmlns="">p = malloc (1024);</p><p xmlns="">if (NULL == p)) {</p><p xmlns="">                        return -1;</p><p xmlns="">} </p><p xmlns="">Use (p); </p><p xmlns="">return 0;</p><p xmlns="">} </p><p xmlns="">void Use (PVOID p)</p><p xmlns="">{</p><p xmlns="">//</p><p xmlns="">// p is safe to be used here.</p><p xmlns="">/ </p><p xmlns="">} </p><p xmlns="">MSDN library lists a few reasons why applications should not use the IsBadXXXPtr APIs:</p><ul xmlns=""><li class="unordered">
In a preemptive multitasking environment, it is possible for some other thread to change the process's access to the memory being tested. <br /><br /></li><li class="unordered">
Dereferencing potentially invalid pointers can disable stack expansion in there threads. A thread exhausting its stack, when stack expansion has been disabled, results in the immediate termination of the parent process, with no pop-up error window or diagnostic information. <br /><br /></li><li class="unordered">
Threads in a process are expected to cooperate in such a way that one will not free memory that the other needs. Use of this function does not negate the need to do this. If this is not done, the application may fail in an unpredictable manner. <br /><br /></li></ul><p xmlns="">Because of all these reasons, it is recommended to never use these APIs.</p></content></div><!--[if gte IE 5]>
			<tool:tip element="languageFilterToolTip" avoidmouse="false"/>
		<![endif]--></div><div id="footer"><p></p><hr></hr><br /><br /></div></div></body></html>
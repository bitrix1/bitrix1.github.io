<html DIR="LTR" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:tool="http://www.microsoft.com/tooltip"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=Windows-1252"></META><META NAME="save" CONTENT="history"></META><title>Memory Stop Details</title><link rel="stylesheet" type="text/css" href="../local/Classic.css"></link><script src="../local/script.js"></script></head><body><div><input type="hidden" id="userDataCache" class="userDataStyle"></input><input type="hidden" id="hiddenScrollOffset"></input></div><img id="dropDownImage" style="display:none; height:0; width:0;" src="../local/drpdown.gif"></img><img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../local/drpdown_orange.gif"></img><img id="collapseImage" style="display:none; height:0; width:0;" src="../local/collapse.gif"></img><img id="expandImage" style="display:none; height:0; width:0;" src="../local/exp.gif"></img><img id="copyImage" style="display:none; height:0; width:0;" src="../local/copycode.gif"></img><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../local/copycodeHighlight.gif"></img><div id="header"><table width="100%" id="topTable"><tr id="headerTableRow1"><td align="left"><span id="runningHeaderText"></span></td></tr><tr id="headerTableRow2"><td align="left"><span id="nsrTitle">Memory Stop Details</span></td></tr><tr id="headerTableRow3"><td></td></tr></table></div><div id="mainSection"><div id="mainBody"><div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()"></div><p>The Memory checks ensure APIs for virtual space manipulations are used correctly (e.g. VirtualAlloc, VirtualFree, MapViewOfFile).</p><p>Following is a list of verifier stops that may occur when running the memory checks against a solution or project on different platforms: </p><h3 class="subHeading"></h3><table><tr><td colspan="1"><p><b>Error message</b></p></td><td colspan="1"><p><b>Stop code</b></p></td></tr><tr><td colspan="1"><p><a href="80c5ca38-ff3f-4d00-8f93-1d00919b754a.htm">Freeing virtual memory block with invalid size or start address</a></p></td><td colspan="1"><p>0600</p></td></tr><tr><td colspan="1"><p><a href="583b253a-a0d0-4f18-9206-4d8923235304.htm">Incorrect virtual allocation call</a></p></td><td colspan="1"><p>0601</p></td></tr><tr><td colspan="1"><p><a href="368da333-c35b-4f98-b419-fbd640d1bcc6.htm">Incorrect map view call</a></p></td><td colspan="1"><p>0602</p></td></tr><tr><td colspan="1"><p><a href="046db1f3-94fe-413f-baef-96724079dc3f.htm">Probing invalid address</a></p></td><td colspan="1"><p>0603</p></td></tr><tr><td colspan="1"><p><a href="a3d1b13c-0b85-4929-a6d2-50dec02abc88.htm">Probing free memory</a></p></td><td colspan="1"><p>0604</p></td></tr><tr><td colspan="1"><p><a href="63448023-99ba-4784-be1c-987cbcbf65fa.htm">Probing a guard page</a></p></td><td colspan="1"><p>0605</p></td></tr><tr><td colspan="1"><p><a href="11fd1cc1-504e-4c52-99d4-fd1b8810024d.htm">Probing null address</a></p></td><td colspan="1"><p>0606</p></td></tr><tr><td colspan="1"><p><a href="4762e800-1960-4512-9482-bcc9b55780f0.htm">Probing memory block with invalid start address or size</a></p></td><td colspan="1"><p>0607</p></td></tr><tr><td colspan="1"><p><a href="9ea3402b-fe73-4a60-91b4-6a28d7866d7d.htm">Unloading DLL with invalid size or start address</a></p></td><td colspan="1"><p>0608</p></td></tr><tr><td colspan="1"><p><a href="398f0b23-1064-4cec-a2b1-bbcbb5ff4713.htm">Freeing memory block inside current thread's stack address range</a></p></td><td colspan="1"><p>0609</p></td></tr><tr><td colspan="1"><p><a href="53c834b0-2488-4a85-82f3-41dd827fdad6.htm">Incorrect FreeType parameter for VirtualFree operation</a></p></td><td colspan="1"><p>060A</p></td></tr><tr><td colspan="1"><p><a href="6b67dfa9-a152-4ddf-96f6-7fc980ff520e.htm">Trying to free virtual memory block that is already freed</a></p></td><td colspan="1"><p>060B</p></td></tr><tr><td colspan="1"><p><a href="90988fa2-ed38-4ed0-9b96-e22e74631f8c.htm">Incorrect size parameter for VirtualFree (MEM_RELEASE) operation</a></p></td><td colspan="1"><p>060C</p></td></tr><tr><td colspan="1"><p><a href="75d6e670-868d-4c69-b251-a8baad7019dd.htm">Unexpected exception raised in DLL entry point routine</a></p></td><td colspan="1"><p>060D</p></td></tr><tr><td colspan="1"><p><a href="70a858b0-82e0-4954-8624-d506264e4f0d.htm">Unexpected exception raised in thread function</a></p></td><td colspan="1"><p>060E</p></td></tr><tr><td colspan="1"><p><a href="69ec9b7a-42ef-4341-ab80-43fefe88bd80.htm">Unexpected exception raised while probing memory</a></p></td><td colspan="1"><p>060F</p></td></tr><tr><td colspan="1"><p><a href="a3190fc4-e139-41a6-8c22-8aed8ea9d78c.htm">Trying to reset NULL address</a></p></td><td colspan="1"><p>0610</p></td></tr><tr><td colspan="1"><p><a href="7c54c3dc-96ea-47a0-a789-d189d9f823d8.htm">Freeing heap memory block inside current thread's stack address range</a></p></td><td colspan="1"><p>0612</p></td></tr><tr><td colspan="1"><p><a href="6229b414-5cbb-4243-8283-7484b09a48a2.htm">Unmapping memory region inside current thread's stack address range</a></p></td><td colspan="1"><p>0613</p></td></tr><tr><td colspan="1"><p><a href="af8de748-13cd-49cf-9fc4-078dffdba9d1.htm">Incorrect RTL_RESOURCE address</a></p></td><td colspan="1"><p>0614</p></td></tr><tr><td colspan="1"><p><a href="aa5ece8d-f9b3-4b95-91bc-21f49bceb2df.htm">Invalid critical section address</a></p></td><td colspan="1"><p>0615</p></td></tr><tr><td colspan="1"><p><a href="bcc19596-4f23-48c4-97fe-8e7aed5705bb.htm">Attempt to execute code in non-executable memory</a></p></td><td colspan="1"><p>0616</p></td></tr><tr><td colspan="1"><p><a href="9e4b2327-3bc4-478e-b255-79332be07a8c.htm">Unexpected exception raised while initializing output buffer</a></p></td><td colspan="1"><p>0617</p></td></tr><tr><td colspan="1"><p><a href="d3cf2468-f221-4037-a192-2364fa53b9eb.htm">Unexpected exception when trying to find heap block size</a></p></td><td colspan="1"><p>0618</p></td></tr><tr><td colspan="1"><p><a href="8a723bad-1bfe-4c16-9317-ced6bc33eb12.htm">Freeing memory block within invalid start address</a></p></td><td colspan="1"><p>0619</p></td></tr><tr><td colspan="1"><p><a href="34a55ad8-ee86-4cf4-b125-b6678ee9064a.htm">Unmapping memory block with invalid start address</a></p></td><td colspan="1"><p>061A</p></td></tr><tr><td colspan="1"><p><a href="fb12dd7e-89e5-4171-aee2-1933004eab5e.htm">Unexpected exception raised in threadpool callback function.</a></p></td><td colspan="1"><p>061B</p></td></tr><tr><td colspan="1"><p><a href="b8bfbf89-9a31-442b-824b-bb9fe5eaa96e.htm">Code in non-executable memory.</a></p></td><td colspan="1"><p>061C</p></td></tr><tr><td colspan="1"><p><a href="94f25178-d0bd-4bf6-bf31-501477e04b09.htm">Creating executable heap</a></p></td><td colspan="1"><p>061D</p></td></tr><tr><td colspan="1"><p><a href="373b3055-834d-46d8-85e9-0b2e9e46eea9.htm">Allocating executable memory</a></p></td><td colspan="1"><p>061E</p></td></tr></table><p></p><h2 class="heading">Properties</h2><div id="sectionSection0" class="section"><content xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"><p xmlns="">There is one property for the memory tests: ExecWritePage. This property when turned on (off by default) will generate two stops.</p><ol class="ordered" xmlns=""><li><a href="94f25178-d0bd-4bf6-bf31-501477e04b09.htm">Creating executable heap</a><br /><br /></li><li><a href="373b3055-834d-46d8-85e9-0b2e9e46eea9.htm">Allocating executable memory</a><br /><br /></li></ol><p xmlns="">Double click the property to edit it. Click the check box to turn the value to True, which turns on the test.</p></content></div><!--[if gte IE 5]>
			<tool:tip element="languageFilterToolTip" avoidmouse="false"/>
		<![endif]--></div><div id="footer"><p></p><hr></hr><br /><br /></div></div></body></html>